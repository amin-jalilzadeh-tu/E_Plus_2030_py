


we have this excel file that we cretae the lookup py files from it. 
user can drag and drop there own excel file and we will create the lookup py files from it. it will be overridden. 
it can be on memory or permenetly saved. 

this excel file aalso, should be abled to be modified by the results from calibration.



├── lookup_xlx
│   ├── dhw_lookup.xlsx
│   ├── elec_schedules.xlsx
│   ├── epw_lookup.xlsx
│   ├── geometry_lookup.xlsx
│   ├── groundtemp_lookup.xlsx
│   ├── hvac_lookup.xlsx
│   ├── lighting_lookup.xlsx
│   ├── materials.xlsx
│   └── ventilation_lookup_data.xlsx

here we have user configs that we receive from the user interface and will be saved here, and code will lookup for this,
 and if it is here, it will be used and override over lookups.    

├── user_configs
│   ├── dhw_lookup.xlsx
│   ├── elec_schedules.xlsx
│   ├── epw_lookup.xlsx
│   ├── geometry_lookup.xlsx
│   ├── groundtemp_lookup.xlsx
│   ├── hvac_lookup.xlsx
│   ├── lighting_lookup.xlsx
│   ├── materials.xlsx
│   └── ventilation_lookup_data.xlsx



from database pgsql, it will be connected and saved as datafarame, for now we have csv files for test. 


├── df_buildings.csv
├── df_focus.csv
├── df_trees.csv









├── main.py
│   └── Imports:
│       │   os
│       │   logging
│           pandas
│   └── From Imports:
│       │   from geomeppy import IDF
│       │   from geomz.building import create_building_with_roof_type
│       │   from geomz.geometry_overrides_from_excel import read_geometry_overrides_excel
│       │   from fenez.fenestration import add_fenestration
│       │   from fenez.materials import update_construction_materials
│       │   from fenez.materials import assign_constructions_to_surfaces
│       │   from fenez.dict_override_excel import override_dictionaries_from_excel
│       │   from Elec.lighting import add_lights_and_parasitics
│       │   from Elec.lighting_lookup import lighting_lookup
│       │   from Elec.lighting_overrides_from_excel import read_lighting_overrides_from_excel
│       │   from Elec.lighting_overrides_from_excel import apply_lighting_overrides_to_lookup
│       │   from DHW.water_heater import add_dhw_to_idf
│       │   from DHW.dhw_lookup import dhw_lookup
│       │   from DHW import dhw_lookup
│       │   from DHW.dhw_overrides_from_excel import override_dhw_lookup_from_excel
│       │   from HVAC.custom_hvac import add_HVAC_Ideal_to_all_zones
│       │   from HVAC.hvac_lookup import hvac_lookup
│       │   from HVAC.hvac_overrides_from_excel import read_hvac_overrides_from_excel
│       │   from HVAC.hvac_overrides_from_excel import apply_hvac_overrides_to_lookup
│       │   from ventilation.add_ventilation import add_ventilation_to_idf
│       │   from ventilation.ventilation_lookup import ventilation_lookup
│       │   from ventilation.ventilation_overrides_from_excel import read_ventilation_overrides_from_excel
│       │   from ventilation.ventilation_overrides_from_excel import apply_ventilation_overrides_to_lookup
│       │   from setzone.add_outdoor_air_and_zone_sizing_to_all_zones import add_outdoor_air_and_zone_sizing_to_all_zones
│       │   from tempground.add_ground_temperatures import add_ground_temperatures
│       │   from outputdef.assign_output_settings import assign_output_settings
│       │   from outputdef.add_output_definitions import add_output_definitions
│       │   from postproc.merge_results import merge_all_results
│       │   from other.zonelist import create_zonelist
│       │   from epw.run_epw_sims import simulate_all
│       │   from epw.epw_lookup import epw_lookup
│       │   from epw.epw_overrides_from_excel import read_epw_overrides_from_excel
│       │   from epw.epw_overrides_from_excel import apply_epw_overrides_to_lookup
│       │   from fenez.data_materials_residential import residential_materials_data
│       │   from fenez.data_materials_non_residential import non_residential_materials_data
│           from shading.shading import add_shading_to_idf
│   └── Functions:
│       │   create_idf_for_building
│           main
│   └── CSV Inputs:
│       │   df_focus.csv
│       │   df_trees.csv
│           df_buildings.csv
│   └── CSV Outputs:
│       │   output/assigned/assigned_geometry.csv
│       │   output/assigned/assigned_lighting.csv
│       │   output/assigned/assigned_dhw_params.csv
│       │   output/assigned/assigned_hvac_params.csv
│       │   output/assigned/assigned_ventilation.csv
│       │   output/assigned/assigned_epw_paths.csv
│       │   output/assigned/assigned_ground_temps.csv
│           output/assigned/assigned_setzone_params.csv





├── DHW
│   ├── __pycache__
│   │   ├── assign_dhw_values.cpython-39.pyc
│   │   ├── building_type_map.cpython-39.pyc
│   │   ├── constants.cpython-39.pyc
│   │   ├── dhw_lookup.cpython-39.pyc
│   │   ├── dhw_overrides_from_excel.cpython-39.pyc
│   │   ├── parameters.cpython-39.pyc
│   │   ├── schedules.cpython-39.pyc
│   │   └── water_heater.cpython-39.pyc
│   ├── assign_dhw_values.py
│   │   └── Imports:
│   │           random
│   │   └── From Imports:
│   │           from dhw_lookup import dhw_lookup
│   │   └── Functions:
│   │       │   find_dhw_overrides
│   │       │   pick_val_with_range
│   │       │   assign_dhw_parameters
│   │           override_range
│   ├── building_type_map.py
│   │   └── Functions:
│   │           map_building_function_to_dhw_key
│   ├── dhw.tex
│   ├── dhw_lookup.py
│   ├── dhw_overrides_from_excel.py
│   │   └── Imports:
│   │       │   pandas
│   │           copy
│   │   └── Functions:
│   │           override_dhw_lookup_from_excel
│   ├── parameters.py
│   │   └── Functions:
│   │           calculate_dhw_parameters
│   ├── schedules.py
│   │   └── Functions:
│   │           create_dhw_schedules
│   └── water_heater.py
│       └── From Imports:
│           │   from assign_dhw_values import assign_dhw_parameters
│           │   from parameters import calculate_dhw_parameters
│               from schedules import create_dhw_schedules
│       └── Functions:
│               add_dhw_to_idf
├── Elec
│   ├── __pycache__
│   │   ├── assign_lighting_values.cpython-39.pyc
│   │   ├── constants.cpython-39.pyc
│   │   ├── elec_overrides_from_excel.cpython-39.pyc
│   │   ├── lighting.cpython-39.pyc
│   │   ├── lighting_lookup.cpython-39.pyc
│   │   ├── lighting_overrides_from_excel.cpython-39.pyc
│   │   ├── overrides_helper.cpython-39.pyc
│   │   ├── schedule_def.cpython-39.pyc
│   │   └── schedules.cpython-39.pyc
│   ├── assign_lighting_values.py
│   │   └── Imports:
│   │           random
│   │   └── From Imports:
│   │       │   from lighting_lookup import lighting_lookup
│   │       │   from constants import DEFAULT_LIGHTING_WM2
│   │       │   from constants import DEFAULT_PARASITIC_WM2
│   │       │   from constants import DEFAULT_TD
│   │       │   from constants import DEFAULT_TN
│   │       │   from constants import DEFAULT_EQUIP_FRACTION_LOST
│   │           from overrides_helper import find_applicable_overrides
│   │   └── Functions:
│   │       │   assign_lighting_parameters
│   │           pick_val
│   ├── constants.py
│   ├── light.tex
│   ├── lighting.py
│   │   └── From Imports:
│   │       │   from assign_lighting_values import assign_lighting_parameters
│   │       │   from schedules import create_lighting_schedule
│   │           from schedules import create_parasitic_schedule
│   │   └── Functions:
│   │       │   get_building_category_and_subtype
│   │           add_lights_and_parasitics
│   ├── lighting_lookup.py
│   ├── lighting_overrides_from_excel.py
│   │   └── Imports:
│   │       │   pandas
│   │           copy
│   │   └── Functions:
│   │       │   read_lighting_overrides_from_excel
│   │           apply_lighting_overrides_to_lookup
│   ├── overrides_helper.py
│   │   └── Functions:
│   │           find_applicable_overrides
│   ├── schedule_def.py
│   │   └── Imports:
│   │           pandas
│   │   └── Functions:
│   │       │   read_schedule_overrides_from_excel
│   │           apply_schedule_overrides_to_schedules
│   └── schedules.py
│       └── From Imports:
│               from schedule_def import SCHEDULE_DEFINITIONS
│       └── Functions:
│           │   create_lighting_schedule
│               create_parasitic_schedule
├── epw
│   ├── __pycache__
│   │   ├── assign_epw_file.cpython-39.pyc
│   │   ├── epw_lookup.cpython-39.pyc
│   │   ├── epw_overrides_from_excel.cpython-39.pyc
│   │   └── run_epw_sims.cpython-39.pyc
│   ├── assign_epw_file.py
│   │   └── Imports:
│   │           math
│   │   └── From Imports:
│   │           from epw_lookup import epw_lookup
│   │   └── Functions:
│   │       │   find_epw_overrides
│   │       │   assign_epw_for_building_with_overrides
│   │           pick_epw_from_lookup
│   ├── epw_lookup.py
│   ├── epw_lookup_generated.py
│   ├── epw_overrides_from_excel.py
│   │   └── Imports:
│   │       │   pandas
│   │           copy
│   │   └── Functions:
│   │       │   read_epw_overrides_from_excel
│   │           apply_epw_overrides_to_lookup
│   └── run_epw_sims.py
│       └── Imports:
│           │   os
│               logging
│       └── From Imports:
│           │   from eppy.modeleditor import IDF
│           │   from multiprocessing import Pool
│               from assign_epw_file import assign_epw_for_building_with_overrides
│       └── Functions:
│           │   run_simulation
│           │   generate_simulations
│               simulate_all
├── fenez
│   ├── __pycache__
│   │   ├── assign_fenestration_values.cpython-39.pyc
│   │   ├── data_materials_non_residential.cpython-39.pyc
│   │   ├── data_materials_residential.cpython-39.pyc
│   │   ├── dhw_functions.cpython-39.pyc
│   │   ├── dict_override_excel.cpython-39.pyc
│   │   ├── fenestration.cpython-39.pyc
│   │   ├── materials.cpython-39.pyc
│   │   ├── materials_config.cpython-39.pyc
│   │   └── materials_lookup.cpython-39.pyc
│   ├── 4.md
│   ├── assign_fenestration_values.py
│   │   └── From Imports:
│   │       │   from materials_config import get_extended_materials_data
│   │           from materials_config import compute_wwr
│   │   └── Functions:
│   │           assign_fenestration_parameters
│   ├── data_materials_non_residential.py
│   ├── data_materials_residential.py
│   ├── dict_override_excel.py
│   │   └── Imports:
│   │       │   pandas
│   │       │   copy
│   │           math
│   │   └── Functions:
│   │           override_dictionaries_from_excel
│   ├── fenestration.py
│   │   └── From Imports:
│   │       │   from geomeppy import IDF
│   │           from assign_fenestration_values import assign_fenestration_parameters
│   │   └── Functions:
│   │           add_fenestration
│   ├── materials.py
│   │   └── From Imports:
│   │       │   from geomeppy import IDF
│   │           from materials_config import get_extended_materials_data
│   │   └── Functions:
│   │       │   _store_material_picks
│   │       │   update_construction_materials
│   │       │   assign_constructions_to_surfaces
│   │       │   create_opaque_material
│   │           create_window_material
│   ├── materials_config.py
│   │   └── Imports:
│   │           random
│   │   └── From Imports:
│   │       │   from data_materials_residential import residential_materials_data
│   │       │   from data_materials_non_residential import non_residential_materials_data
│   │           from materials_lookup import material_lookup
│   │   └── Functions:
│   │       │   pick_val
│   │       │   assign_material_from_lookup
│   │       │   compute_wwr
│   │           get_extended_materials_data
│   └── materials_lookup.py
├── geomz
│   ├── __pycache__
│   │   ├── __init__.cpython-39.pyc
│   │   ├── assign_geometry_values.cpython-39.pyc
│   │   ├── building.cpython-39.pyc
│   │   ├── geometry.cpython-39.pyc
│   │   ├── geometry_lookup.cpython-39.pyc
│   │   ├── geometry_overrides_from_excel.cpython-39.pyc
│   │   ├── override_geometry_lookup_from_excel.cpython-39.pyc
│   │   └── zoning.cpython-39.pyc
│   ├── __init__.py
│   ├── assign_geometry_values.py
│   │   └── Imports:
│   │           random
│   │   └── From Imports:
│   │       │   from geometry_lookup import geometry_lookup
│   │           from geometry_overrides_from_excel import pick_geom_params_from_rules
│   │   └── Functions:
│   │       │   find_geom_overrides
│   │       │   pick_val_with_range
│   │           assign_geometry_values
│   ├── building.py
│   │   └── From Imports:
│   │       │   from assign_geometry_values import assign_geometry_values
│   │       │   from geometry import compute_dimensions_from_area_perimeter
│   │       │   from geometry import create_building_base_polygon
│   │       │   from zoning import create_zones_with_perimeter_depth
│   │           from zoning import link_surfaces
│   │   └── Functions:
│   │           create_building_with_roof_type
│   ├── geometry.py
│   │   └── Imports:
│   │           math
│   │   └── From Imports:
│   │       │   from math import sqrt
│   │       │   from math import radians
│   │       │   from math import cos
│   │           from math import sin
│   │   └── Functions:
│   │       │   rotate_point
│   │       │   compute_dimensions_from_area_perimeter
│   │       │   create_building_base_polygon
│   │       │   polygon_area
│   │       │   inward_offset_polygon
│   │       │   edge_offset
│   │           line_intersect
│   ├── geometry_lookup.py
│   ├── geometry_overrides_from_excel.py
│   │   └── Imports:
│   │       │   pandas
│   │       │   copy
│   │           math
│   │   └── Functions:
│   │       │   read_geometry_overrides_excel
│   │           pick_geom_params_from_rules
│   ├── geometry_overrides_helper.py
│   │   └── Functions:
│   │           find_geom_overrides
│   ├── override_geometry_lookup_from_excel.py
│   │   └── Functions:
│   │           override_geometry_lookup_from_excel
│   └── zoning.py
│       └── From Imports:
│           │   from geometry import polygon_area
│               from geometry import inward_offset_polygon
│       └── Functions:
│           │   link_surfaces
│           │   create_zone_surfaces
│           │   create_zones_with_perimeter_depth
│           │   edge_to_bc
│               get_wall
├── HVAC
│   ├── __pycache__
│   │   ├── assign_hvac_values.cpython-39.pyc
│   │   ├── custom_hvac.cpython-39.pyc
│   │   ├── hvac_lookup.cpython-39.pyc
│   │   └── hvac_overrides_from_excel.cpython-39.pyc
│   ├── assign_hvac_values.py
│   │   └── Imports:
│   │           random
│   │   └── From Imports:
│   │           from hvac_lookup import hvac_lookup
│   │   └── Functions:
│   │       │   find_hvac_overrides
│   │       │   pick_val_with_range
│   │       │   assign_hvac_ideal_parameters
│   │           override_range
│   ├── custom_hvac.py
│   │   └── From Imports:
│   │           from assign_hvac_values import assign_hvac_ideal_parameters
│   │   └── Functions:
│   │           add_HVAC_Ideal_to_all_zones
│   ├── hvac.tex
│   ├── hvac_lookup.py
│   └── hvac_overrides_from_excel.py
│       └── Imports:
│               pandas
│       └── Functions:
│           │   read_hvac_overrides_from_excel
│               apply_hvac_overrides_to_lookup
├── other
│   ├── __pycache__
│   │   └── zonelist.cpython-39.pyc
│   ├── add_ventilation.py
│   │   └── From Imports:
│   │       │   from ventilation.assign_ventilation_values import assign_ventilation_params_with_overrides
│   │       │   from ventilation.schedules import create_always_on_schedule
│   │       │   from ventilation.schedules import create_day_night_schedule
│   │       │   from ventilation.schedules import create_workhours_schedule
│   │       │   from ventilation.calc_functions import calc_infiltration
│   │       │   from ventilation.calc_functions import calc_required_ventilation_flow
│   │       │   from ventilation.mappings import safe_lower
│   │       │   from ventilation.mappings import map_age_range_to_year_key
│   │       │   from ventilation.mappings import map_infiltration_key
│   │           from ventilation.mappings import map_usage_key
│   │   └── Functions:
│   │           add_ventilation_to_idf
│   └── zonelist.py
│       └── Functions:
│               create_zonelist
├── postproc
│   ├── __pycache__
│   │   ├── merge_results.cpython-39.pyc
│   │   ├── post_process_simulations.cpython-39.pyc
│   │   └── postprocess_results.cpython-39.pyc
│   ├── merge_results.py
│   │   └── Imports:
│   │       │   os
│   │       │   re
│   │       │   pandas
│   │           numpy
│   │   └── From Imports:
│   │       │   from datetime import datetime
│   │       │   from datetime import timedelta
│   │           from calendar import month_name
│   │   └── Functions:
│   │       │   merge_all_results
│   │       │   aggregate_series
│   │       │   correct_time
│   │       │   parse_dt
│   │           safe_dt
│   └── Untitled-1.py
│       └── Imports:
│           │   os
│           │   re
│           │   pandas
│               numpy
│       └── From Imports:
│           │   from datetime import datetime
│           │   from datetime import timedelta
│               from postproc.merge_results import merge_all_results
│       └── Functions:
│           │   merge_all_results
│           │   postprocess
│           │   aggregate_series
│           │   correct_time
│               parse_dt
├── setzone
│   ├── __pycache__
│   │   ├── add_outdoor_air_and_zone_sizing.cpython-39.pyc
│   │   ├── add_outdoor_air_and_zone_sizing_to_all_zones.cpython-39.pyc
│   │   ├── assign_zone_sizing_values.cpython-39.pyc
│   │   ├── define_global_design_specs.cpython-39.pyc
│   │   └── zone_sizing_lookup.cpython-39.pyc
│   ├── add_outdoor_air_and_zone_sizing_to_all_zones.py
│   │   └── From Imports:
│   │       │   from geomeppy import IDF
│   │       │   from assign_zone_sizing_values import assign_zone_sizing_params
│   │           from define_global_design_specs import define_global_design_specs
│   │   └── Functions:
│   │           add_outdoor_air_and_zone_sizing_to_all_zones
│   ├── assign_zone_sizing_values.py
│   │   └── Imports:
│   │           random
│   │   └── From Imports:
│   │           from zone_sizing_lookup import zone_sizing_lookup
│   │   └── Functions:
│   │       │   assign_zone_sizing_params
│   │           pick_val
│   ├── define_global_design_specs.py
│   │   └── Functions:
│   │           define_global_design_specs
│   └── zone_sizing_lookup.py
├── shading
│   ├── __pycache__
│   │   ├── shading.cpython-39.pyc
│   │   ├── shading_assign.cpython-39.pyc
│   │   ├── shading_creator.cpython-39.pyc
│   │   ├── shading_filter.cpython-39.pyc
│   │   └── transmittance_schedules.cpython-39.pyc
│   ├── shading.py
│   │   └── Imports:
│   │       │   json
│   │           pandas
│   │   └── From Imports:
│   │       │   from shading_creator import create_shading_detailed
│   │           from transmittance_schedules import create_tree_trans_schedule
│   │   └── Functions:
│   │           add_shading_to_idf
│   ├── shading_creator.py
│   │   └── Imports:
│   │           ast
│   │   └── Functions:
│   │           create_shading_detailed
│   └── transmittance_schedules.py
│       └── Functions:
│               create_tree_trans_schedule
├── tempground
│   ├── __pycache__
│   │   ├── add_ground_temperatures.cpython-39.pyc
│   │   ├── assign_groundtemp_values.cpython-39.pyc
│   │   └── groundtemp_lookup.cpython-39.pyc
│   ├── add_ground_temperatures.py
│   │   └── From Imports:
│   │           from assign_groundtemp_values import assign_ground_temperatures
│   │   └── Functions:
│   │           add_ground_temperatures
│   ├── assign_groundtemp_values.py
│   │   └── Imports:
│   │           random
│   │   └── From Imports:
│   │           from groundtemp_lookup import groundtemp_lookup
│   │   └── Functions:
│   │       │   assign_ground_temperatures
│   │           pick_val
│   └── groundtemp_lookup.py
├── ventilation
│   ├── __pycache__
│   │   ├── add_ventilation.cpython-39.pyc
│   │   ├── assign_ventilation_values.cpython-39.pyc
│   │   ├── calc_functions.cpython-39.pyc
│   │   ├── config_systems.cpython-39.pyc
│   │   ├── create_ventilation_systems.cpython-39.pyc
│   │   ├── mappings.cpython-39.pyc
│   │   ├── schedules.cpython-39.pyc
│   │   ├── ventilation_lookup.cpython-39.pyc
│   │   └── ventilation_overrides_from_excel.cpython-39.pyc
│   ├── add_ventilation.py
│   │   └── From Imports:
│   │       │   from ventilation.assign_ventilation_values import assign_ventilation_params_with_overrides
│   │       │   from ventilation.schedules import create_always_on_schedule
│   │       │   from ventilation.schedules import create_day_night_schedule
│   │       │   from ventilation.schedules import create_workhours_schedule
│   │       │   from ventilation.create_ventilation_systems import create_ventilation_system
│   │       │   from ventilation.calc_functions import calc_infiltration
│   │       │   from ventilation.calc_functions import calc_required_ventilation_flow
│   │       │   from ventilation.mappings import safe_lower
│   │       │   from ventilation.mappings import map_age_range_to_year_key
│   │       │   from ventilation.mappings import map_infiltration_key
│   │           from ventilation.mappings import map_usage_key
│   │   └── Functions:
│   │           add_ventilation_to_idf
│   ├── assign_ventilation_values.py
│   │   └── Imports:
│   │           random
│   │   └── From Imports:
│   │           from ventilation_lookup import ventilation_lookup
│   │   └── Functions:
│   │       │   find_vent_overrides
│   │       │   pick_val_with_range
│   │       │   assign_ventilation_params_with_overrides
│   │           override_range
│   ├── calc_functions.py
│   │   └── Imports:
│   │           math
│   │   └── Functions:
│   │       │   calc_infiltration
│   │       │   calc_required_ventilation_flow
│   │           calc_fan_power
│   ├── config_systems.py
│   ├── create_ventilation_systems.py
│   │   └── Imports:
│   │           random
│   │   └── From Imports:
│   │           from ventilation.config_systems import SYSTEMS_CONFIG
│   │   └── Functions:
│   │       │   create_ventilation_system
│   │           pick_val
│   ├── mappings.py
│   │   └── Functions:
│   │       │   safe_lower
│   │       │   map_age_range_to_year_key
│   │       │   map_infiltration_key
│   │       │   map_usage_key
│   │           map_ventilation_system
│   ├── schedules.py
│   │   └── From Imports:
│   │           from geomeppy import IDF
│   │   └── Functions:
│   │       │   create_always_on_schedule
│   │       │   create_day_night_schedule
│   │       │   create_workhours_schedule
│   │       │   create_schedule_from_pattern
│   │       │   create_schedule_from_weekday_weekend_pattern
│   │           ensure_dynamic_schedule
│   ├── vent.tex
│   ├── ventilation_lookup.py
│   └── ventilation_overrides_from_excel.py
│       └── Imports:
│           │   pandas
│           │   copy
│               math
│       └── Functions:
│           │   read_ventilation_overrides_from_excel
│           │   apply_ventilation_overrides_to_lookup
│               is_number
├── outputdef
│   ├── add_output_definitions.py
│   │   └── Functions:
│   │           add_output_definitions
│   ├── assign_output_settings.py
│   │   └── From Imports:
│   │           from output_lookup import output_lookup
│   │   └── Functions:
│   │           assign_output_settings
│   └── output_lookup.py







































├── output
│   ├── assigned
│   │   ├── assigned_dhw_params.csv
│   │   ├── assigned_geometry.csv
│   │   ├── assigned_hvac_building.csv
│   │   ├── assigned_hvac_zones.csv
│   │   ├── assigned_lighting.csv
│   │   ├── assigned_setzone_params.csv
│   │   ├── assigned_vent_building.csv
│   │   ├── assigned_vent_zones.csv
│   │   ├── structured_fenez_params.csv
│   │   └── Structuring_assigns.ipynb
│   ├── output_IDFs
│   │   ├── building_0.idf
│   │   ├── building_0_85344a.idf
│   │   ├── building_1.idf
│   │   └── building_1_37cb48.idf
│   ├── results
│   │   ├── master_parameters.csv
│   │   ├── master_parameters_mock.csv
│   │   ├── merged_as_is.csv
│   │   ├── merged_daily_mean.csv
│   │   ├── merged_daily_mean_mocked.csv
│   │   └── mock_merged_daily_mean.csv
│   ├── Sim_Results
│   │   └── 2020.0
│   │       ├── simulation_bldg0.audit
│   │       ├── simulation_bldg0.bnd
│   │       ├── simulation_bldg0.csv
│   │       ............
│   │       ├── simulation_bldg1Table.htm
│   │       └── simulation_bldg1Zsz.csv
│   ├── assigned_fenez_params.csv
│   ├── master_parameters_mock.csv















├── validation
│   ├── __pycache__
│   │   ├── compare_sims_with_measured.cpython-39.pyc
│   │   ├── metrics.cpython-39.pyc
│   │   ├── validate_results.cpython-39.pyc
│   │   ├── validate_results_custom.cpython-39.pyc
│   │   └── visualize.cpython-39.pyc
│   ├── compare_sims_with_measured.py
│   │   └── Imports:
│   │           pandas
│   │   └── Functions:
│   │       │   load_csv_as_df
│   │           align_data_for_variable
│   ├── main.py
│   │   └── Imports:
│   │       │   matplotlib.pyplot
│   │           csv
│   │   └── From Imports:
│   │           from validation.validate_results_custom import validate_with_ranges
│   │   └── Functions:
│   │       │   main
│   │           bar_chart_metrics_for_triple
│   ├── metrics.py
│   │   └── Imports:
│   │           numpy
│   │   └── Functions:
│   │       │   mean_bias_error
│   │       │   cv_rmse
│   │           nmbe
│   ├── validate_results.py
│   │   └── Imports:
│   │       │   os
│   │           pandas
│   │   └── From Imports:
│   │       │   from validation.compare_sims_with_measured import load_csv_as_df
│   │       │   from validation.compare_sims_with_measured import align_data_for_variable
│   │       │   from validation.metrics import mean_bias_error
│   │       │   from validation.metrics import cv_rmse
│   │       │   from validation.metrics import nmbe
│   │       │   from validation.visualize import plot_time_series_comparison
│   │       │   from validation.visualize import scatter_plot_comparison
│   │           from validation.visualize import bar_chart_metrics
│   │   └── Functions:
│   │       │   validate_data
│   │       │   save_metrics_to_csv
│   │           check_for_calibration
│   ├── validate_results_custom.py
│   │   └── Imports:
│   │           pandas
│   │   └── From Imports:
│   │       │   from validation.compare_sims_with_measured import load_csv_as_df
│   │       │   from validation.compare_sims_with_measured import align_data_for_variable
│   │       │   from validation.metrics import mean_bias_error
│   │       │   from validation.metrics import cv_rmse
│   │       │   from validation.metrics import nmbe
│   │       │   from validation.visualize import plot_time_series_comparison
│   │           from validation.visualize import scatter_plot_comparison
│   │   └── Functions:
│   │           validate_with_ranges
│   └── visualize.py
│       └── Imports:
│           │   matplotlib.pyplot
│               numpy
│       └── Functions:
│           │   plot_time_series_comparison
│           │   scatter_plot_comparison
│               bar_chart_metrics



├── validation_report.csv











├── modification
│   ├── aaaaaaaaaaa1.py
│   │   └── Imports:
│   │       │   itertools
│   │       │   random
│   │       │   numpy
│   │       │   pandas
│   │           pyDOE2
│   │   └── From Imports:
│   │       │   from typing import List
│   │       │   from typing import Dict
│   │           from typing import Union
│   │   └── Functions:
│   │       │   define_parameter_space
│   │       │   generate_full_factorial
│   │       │   generate_random_sampling
│   │       │   generate_latin_hypercube
│   │           generate_initial_configurations
│   ├── common_utils.py
│   │   └── Imports:
│   │       │   os
│   │       │   random
│   │           pandas
│   │   └── From Imports:
│   │           from eppy.modeleditor import IDF
│   │   └── Functions:
│   │       │   load_assigned_csv
│   │       │   filter_for_building
│   │       │   to_float_or_none
│   │       │   pick_value_in_range
│   │       │   define_building_param_strategy
│   │       │   generate_multiple_param_sets
│   │       │   save_param_scenarios_to_csv
│   │       │   load_idf
│   │       │   save_idf
│   │           load_scenario_csv
│   ├── dhw_functions.py
│   │   └── From Imports:
│   │           from eppy.modeleditor import IDF
│   │   └── Functions:
│   │       │   apply_dhw_params_to_idf
│   │           _create_or_update_dhw_schedules
│   ├── elec_functions.py
│   │   └── Imports:
│   │           math
│   │   └── Functions:
│   │       │   apply_building_level_elec
│   │       │   _create_or_update_lights_object
│   │       │   _create_or_update_equip_object
│   │       │   apply_object_level_elec
│   │       │   _update_generic_lights_obj
│   │           _update_generic_equip_obj
│   ├── fenez_functions.py
│   │   └── Imports:
│   │       │   pandas
│   │       │   math
│   │           random
│   │   └── Functions:
│   │       │   apply_object_level_fenez
│   │       │   _get_or_create_idf_object
│   │       │   _map_param_to_idf_field
│   │           _handle_rvalue_or_uvalue
│   ├── fenez_functions2.py
│   │   └── Imports:
│   │           pandas
│   │   └── From Imports:
│   │       │   from fenez.materials import update_construction_materials
│   │       │   from fenez.materials import assign_constructions_to_surfaces
│   │           from fenez.fenestration import add_fenestration
│   │   └── Functions:
│   │       │   apply_building_level_fenez
│   │       │   apply_object_level_fenez
│   │           _match_field_name
│   ├── hvac_functions.py
│   │   └── From Imports:
│   │           from eppy.modeleditor import IDF
│   │   └── Functions:
│   │       │   apply_building_level_hvac
│   │       │   _modify_schedule_compact
│   │       │   _set_ideal_loads_supply_temps_all_zones
│   │           apply_zone_level_hvac
│   ├── main_modifi.py
│   │   └── Imports:
│   │       │   os
│   │       │   pandas
│   │           random
│   │   └── From Imports:
│   │       │   from common_utils import load_assigned_csv
│   │       │   from common_utils import load_scenario_csv
│   │       │   from common_utils import load_idf
│   │       │   from common_utils import save_idf
│   │       │   from common_utils import generate_multiple_param_sets
│   │       │   from common_utils import save_param_scenarios_to_csv
│   │       │   from hvac_functions import apply_building_level_hvac
│   │       │   from hvac_functions import apply_zone_level_hvac
│   │       │   from dhw_functions import apply_dhw_params_to_idf
│   │       │   from vent_functions import apply_building_level_vent
│   │       │   from vent_functions import apply_zone_level_vent
│   │           from fenez_functions import apply_object_level_fenez
│   │   └── Functions:
│   │           main
│   └── vent_functions.py
│       └── Imports:
│               random
│       └── Functions:
│           │   apply_building_level_vent
│           │   _create_or_update_infiltration
│           │   _create_or_update_ventilation
│           │   _attach_vent_to_ideal_loads
│           │   apply_zone_level_vent
│               _create_zone_level_object









├── output

│   ├── scenario_idfs
│   │   ├── building_4136730_scenario_0.idf
│   │   ├── building_4136730_scenario_1.idf
│   │   ├── building_4136730_scenario_2.idf
│   │   ├── building_4136730_scenario_3.idf
│   │   └── building_4136730_scenario_4.idf
│   ├── scenarios
│   │   ├── scenario_params_dhw.csv
│   │   ├── scenario_params_elec.csv
│   │   ├── scenario_params_fenez.csv
│   │   ├── scenario_params_hvac.csv
│   │   └── scenario_params_vent.csv




















├── calibration
│   ├── cal
│   │   ├── calibration_manager.py
│   │   │   └── Imports:
│   │   │       │   os
│   │   │       │   numpy
│   │   │           pandas
│   │   │   └── From Imports:
│   │   │       │   from typing import Dict
│   │   │       │   from typing import Any
│   │   │       │   from calibration.calibrator_random import random_calibration
│   │   │       │   from calibration.calibrator_ga import ga_calibration
│   │   │       │   from calibration.calibrator_bayes import bayes_calibration
│   │   │       │   from calibration.sensitivity import run_sensitivity_analysis
│   │   │       │   from calibration.ml_surrogate import SurrogateCalibrator
│   │   │       │   from generation.create_idfs import create_idf_files
│   │   │           from validation.validate_results import validate_data
│   │   │   └── Functions:
│   │   │       │   __init__
│   │   │       │   run_calibration
│   │   │       │   run_sensitivity
│   │   │           run_surrogate_calibration
│   │   │   └── Classes:
│   │   │           CalibrationManager
│   │   ├── calibrator_bayes.py
│   │   │   └── Imports:
│   │   │       │   random
│   │   │           pandas
│   │   │   └── From Imports:
│   │   │       │   from skopt import gp_minimize
│   │   │           from skopt.space import Real
│   │   │   └── Functions:
│   │   │       │   bayes_calibration
│   │   │       │   run_sim_and_validate
│   │   │           objective
│   │   ├── calibrator_ga.py
│   │   │   └── Imports:
│   │   │       │   random
│   │   │       │   copy
│   │   │           pandas
│   │   │   └── Functions:
│   │   │       │   ga_calibration
│   │   │       │   sample_param_set
│   │   │       │   run_sim_and_validate
│   │   │       │   tournament_select
│   │   │       │   crossover
│   │   │           mutate
│   │   ├── calibrator_random.py
│   │   │   └── Imports:
│   │   │       │   random
│   │   │           pandas
│   │   │   └── Functions:
│   │   │       │   random_calibration
│   │   │           run_sim_and_validate
│   │   ├── main_calibration.py
│   │   │   └── Imports:
│   │   │           os
│   │   │   └── From Imports:
│   │   │           from calibration.calibration_manager import CalibrationManager
│   │   │   └── Functions:
│   │   │           main
│   │   ├── ml_surrogate.py
│   │   │   └── Imports:
│   │   │       │   pandas
│   │   │           random
│   │   │   └── Functions:
│   │   │       │   sample_param_set
│   │   │       │   __init__
│   │   │       │   build_surrogate
│   │   │           optimize
│   │   │   └── Classes:
│   │   │           SurrogateCalibrator
│   │   └── sensitivity.py
│   │       └── Functions:
│   │               run_sensitivity_analysis
│   └── prepare_calibration_data.py
│       └── Imports:
│           │   os
│           │   pandas
│               numpy
│       └── Functions:
│           │   load_data
│           │   filter_numeric_parameters
│           │   create_param_set_id_column
│           │   merge_params_with_validation
│               prepare_calibration_data





















































├── output
│   ├── assigned
│   │   ├── assigned_dhw_params.csv
│   │   ├── assigned_geometry.csv
│   │   ├── assigned_hvac_building.csv
│   │   ├── assigned_hvac_zones.csv
│   │   ├── assigned_lighting.csv
│   │   ├── assigned_setzone_params.csv
│   │   ├── assigned_vent_building.csv
│   │   ├── assigned_vent_zones.csv
│   │   ├── structured_fenez_params.csv
│   │   └── Structuring_assigns.ipynb
│   ├── output_IDFs
│   │   ├── building_0.idf
│   │   ├── building_0_85344a.idf
│   │   ├── building_1.idf
│   │   └── building_1_37cb48.idf
│   ├── results
│   │   ├── master_parameters.csv
│   │   ├── master_parameters_mock.csv
│   │   ├── merged_as_is.csv
│   │   ├── merged_daily_mean.csv
│   │   ├── merged_daily_mean_mocked.csv
│   │   └── mock_merged_daily_mean.csv
│   ├── scenario_idfs
│   │   ├── building_4136730_scenario_0.idf
│   │   ├── building_4136730_scenario_1.idf
│   │   ├── building_4136730_scenario_2.idf
│   │   ├── building_4136730_scenario_3.idf
│   │   └── building_4136730_scenario_4.idf
│   ├── scenarios
│   │   ├── scenario_params_dhw.csv
│   │   ├── scenario_params_elec.csv
│   │   ├── scenario_params_fenez.csv
│   │   ├── scenario_params_hvac.csv
│   │   └── scenario_params_vent.csv
│   ├── Sim_Results
│   │   └── 2020.0
│   │       ├── simulation_bldg0.audit
│   │       ├── simulation_bldg0.bnd
│   │       ├── simulation_bldg0.csv
│   │       ............
│   │       ├── simulation_bldg1Table.htm
│   │       └── simulation_bldg1Zsz.csv
│   ├── assigned_fenez_params.csv
│   ├── master_parameters_mock.csv



